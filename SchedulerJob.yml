version: '3.8'
services:
  database:
    image: mongo
    ports:
      - "27017:27017"
    networks:
      - manager_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
  scheduler:
    image: ecattle/node-scheduler:latest
    command: ["sh", "-c", "npm i & npm run start"]
    volumes:
      - bkp_yml_farms:/usr/src/app
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - manager_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
  gestor-inquilino:
    image: ecattle/gestor-inquilino:latest
    environment:
      - VUE_APP_CLOUD=http://api-cloud:${API_CLOUD_PORT}
      - VUE_APP_GOOGLE=${GOOGLE_ID}
      - VUE_APP_FACEBOOK=${FACEBOOK_ID}
    command: ["sh", "-c", "npm i & npm run serve"]
    ports:
      - "8080:8080"
    networks:
      - manager_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
  portal-web:
    image: ecattle/portal-web:latest
    environment:
      - VUE_APP_CLOUD=http://api-cloud:${API_CLOUD_PORT}
      - VUE_APP_GOOGLE=${GOOGLE_ID}
      - VUE_APP_FACEBOOK=${FACEBOOK_ID}
    command: ["sh", "-c", "npm i & npm run serve"]
    ports:
      - "8081:8080"
    networks:
      - manager_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
  api-cloud:
    image: ecattle/cloud-api:latest
    environment:
      - NODE_ENV=development 
      - NODE_PORT=${API_CLOUD_PORT}
      - MONGO_PORT=27017
      - JWT_SECRET=${JWT_SECRET}
      - SMTP_HOST==${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SECURE=${SMTP_SECURE}
      - SMTP_FROM=${SMTP_FROM}
      - DOCKER_EMAIL=${DOCKER_EMAIL}
    command: ["sh", "-c", "npm i & npm run start"]
    ports:
      - "9080:3000"
    networks:
      - manager_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
  agendash:
    image: agenda/agendash
    environment:
      - MONGODB_URI=mongodb://database:27017 
      - COLLECTION=schedulerJob
    ports:
      - "2999:3000"
    networks:
      - manager_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

networks:
  manager_network:
    driver: overlay # para swarm
    attachable: true # containers fora do swarm podem se conectar aos servi√ßos

volumes:
  bkp_yml_farms:
